{"info":{"name":"anf_test","schema":"https://schema.getpostman.com/json/collection/v2.0.0/collection.json"},"item":[{"name":"api","item":[{"name":"site","item":[{"name":"site/login","request":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":""},"url":"http://localhost/anf_test/public/api/login","description":"Servicio para autenticarse en la aplicación \nSe envía las credenciales del usuario de esta forma\n<ul>Parámetros:\n  <li>Credenciales del usuario\n  {\n    \"username\":\"valor,\"\n    \"password\":\"valor\"\n},\n</li>\n<li> Retorna los datos del usuario logueado o si no error en autenticación\n</li>\n</ul>\n","response":[]}},{"name":"site/logout","request":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":""},"url":"http://localhost/anf_test/public/api/logout","description":"Servicio para salir de la aplicación \nPetición por método post para salir de la aplicación es una función segura por lo que tiene q estar acompañada de un metodo de autenticación\n<ul>\n<li> Retorna los datos del usuario registrado o si no error en creación de usuario\n</li>\n</ul>\n","response":[]}},{"name":"site/register","request":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":""},"url":"http://localhost/anf_test/public/api/signup","description":"Servicio para registrarse en la aplicación \nSe envía los datos del usuario si incluye email se le manda el método de acivación (este código esta comentareado) \n en este método se cifra la contraseña y se genera el token para la autenticación BEARER  \n<ul>Parámetros:\n  <li>Credenciales del usuario\n  {\n\t\"nombre_usuario\":\"valor\",\n\t\"apellido_usuario\":\"valor\",\n\t\"username\":\"valor\",\n\t\"pass\":\"valor\",\n\t\"email\":\"correo@localhost.com\"\n}</li>\n<li> Retorna los datos del usuario registrado o si no error en creación de usuario\n</li>\n</ul>\n","response":[]}}],"_postman_isSubFolder":true},{"name":"admin","item":[{"name":"datos","item":[{"name":"datos_list","request":{"method":"GET","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":""},"url":"http://localhost/anf_test/public/api/admin/datos","description":"Servicio para devolver el listado de la tabla datos\nMétodos que permite <b>PUT y GET</b>\n\nSe le pueden pasar parámetros de búsqueda siguiendo el formato JSON de a continuación \n<ul>\n<li>relations-- atributo arreglo que contiene los nombres de la relaciónes del modelo si quiere devolver el resultado serializado, puede especificar el nombre de cada uno en la petición y si los quieres todos pone la palabra \"all\".</li>\n<li>pagination--atributo objeto que contendrá el número de elementos por páginas y la página donde desee posicionarse<li>select--atributo arreglo que contendrá solamentes los atributos que quiere devolver , si es null te devuelve todos los atributos, solo se aplica para la tabla principal de la consulta<ul>\n<li>\n\t<pre>\n\t\"pagination\": {\n\t\t\"page\": valor\n\t\t\"pagesize\": valor\n\t}\n\t</pre>\n</li>\n</ul>\n</li>\n<li>attr-- atributo objeto que contiene los parámetros para la búsqueda por un campo que sea igual al valor o valores que se le pasa.<strong>Ejemplo</strong>\n<ul>\n<li>\n\t<pre>\n\t\"attr\": {\n\t\t\"campo\": valor\n\t}\n\t</pre>\n</li>\n<li>\n\t<pre>\n\t\"attr\": {\n\t\t\"campo\": [valor,valor,valor,valor...]\n\t}\n\t</pre>\n</li>\n</ul>\n</li>\n<li>oper-- atributo arreglo que contiene los parámetros para la búsqueda por un campo por condición \n\t<ul>\t\n\t\t<li>formato:condición|campo|valor</li>\n\t\t<li>excepto la condición like que sería</li>\n\t\t<li>formato:like|campo|comodin|0</li>\n<li>Para el constructor de consultas con <strong>or</strong>,<strong>and</strong>,<strong>not</strong> , cada uno sería un objeto en el cual contendría un arreglo con las condiciones para la consulta,<strong>Ejemplo</strong>\n\t\t<ul>\n\t\t  <li>\n\t\t  <pre>\n\t\t  {\n            \"and\": [\n                {\n                     \"or\": [\n                          {\n                             \"0\": \"<|campo|valor\"\n                          },\n                          {\n                              \"1\": \"like|campo|%valor%|0\"\n                          }\n                      ]\n                }\n            ]\n        },\n        {\n            \"and\": [\n                {\n                    \"and\": [\n                        {\n                            \"0\": \">|campo|valor\"\n                        },\n                        {\n                            \"1\": \"like|campo|%valor%|0\"\n                        }\n                    ]\n                }\n            ]\n        }\n        </pre>\n <strong> ejecutaría and((campo > valor) or (campo like %valor%) ) and ((campo > valor) and (campo like %valor%) )</strong>\n\t\t  </li>\n\t\t</ul>\n\t\t</li>\t</ul>\n</li>\n<li>orderby-- atributo arreglo que contiene los parámetros para ordenar la consulta \n\t<ul>\t\n\t\t<li>formato</li>\n\t\t<ul>\n\t\t<li>campo:valor</li>\n\t\t</ul>\n\t\t<li>valor=3 descendente </li>\n\t\t<li>valor=4 ascendentemente </li>\n\t</ul>\n</li>\n\t\t\n</ul>","response":[]}},{"name":"datos_view","request":{"method":"GET","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":""},"url":"http://localhost/anf_test/public/api/admin/datos","description":"Servicio para devolver un  elemento de la tabla datos\n\nMétodos que permite <b>PUT y GET</b>\n\nSe le pueden pasar parámetros de búsqueda siguiendo el formato JSON de a continuación,siempre mandando el id de la tabla por el método <b>GET</b>:\n<ul>\n<li>relations-- atributo arreglo que contiene los nombres de la relaciónes del modelo si quiere devolver el resultado serializado, puede especificar el nombre de cada uno en la petición y si los quieres todos pone la palabra \"all\".</li>\n</ul>","response":[]}},{"name":"datos_create","request":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":""},"url":"http://localhost/anf_test/public/api/admin/datos","description":"Servicio para crear uno o varios elementos en la tabla datos \nmétodos que permite <b>POST</b> \nLos parámetros para la inserción serán de varias formas:\n <ul>Parámetros:\n <li> Formato Json con cada uno de los campos de la tabla \n <p style=\"color= green\">Ej: \n  {\n  \t\"atributo_1\":\"valor\",\n  \t\"atributo_2\":\"valor\"\n  }\n  </p>\n  </li>\n <li> Objeto en formato Json con el nombre del modelo y como atributos cada uno de los campos de la tabla\n  <p style=\"color= green\">Ej: \n  {\n  \t\"Nombre Modelo\":{\"\n  \t\tatributo_1\":\"valor\",\n  \t\t\"atributo_2\":\"valor\"\n\t}\n  }\n  </p></li>\n <li> Arreglo  de objetos formato Json y como atributos cada uno de los campos de la tabla, este arreglo debe tener el nombre del modelo \n <p style=\"color= green\">Ej: \n  {\n    \"Nombre Modelo\": [\n        {\n            \"atributo_1\": \"valor\",\n            \"atributo_2\": \"valor\"\n        },\n        {\n            \"atributo_1\": \"valor\",\n            \"atributo_2\": \"valor\"\n        }\n    ]\n}\n  </p>\n \n </li>\n </ul>\n \n En la respuesta se detallarán los errores si los tiene  de lo contrario se devolverá el objeto insertado, en caso de mandarse un arreglo en el campo <b>success</b> si fue exitosa o no la petición, si la clase a actualizar es hija de otra clase se le pasan tanto los parámetros del padre y del hijo","response":[]}},{"name":"datos_update","request":{"method":"PUT","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":""},"url":"http://localhost/anf_test/public/api/admin/datos/0","description":"\"Servicio para actualizar un elemento en la tabla datos \nmétodos que permite <b>PUT o PATCH</b> \nLos parámetros para la actualización serán de varias formas, siempre mandando el id de la tabla por el método <b>GET</b>:\n <ul>Parámetros:\n <li> Formato Json con cada uno de los campos de la tabla \n <p style=\"color= green\">Ej: \n  {\n  \t\"atributo_1\":\"valor\",\n  \t\"atributo_2\":\"valor\"\n  }\n  </p>\n  </li>\n <li> Objeto en formato Json con el nombre del modelo y como atributos cada uno de los campos de la tabla\n  <p style=\"color= green\">Ej: \n  {\n  \t\"Nombre Modelo\":{\"\n  \t\tatributo_1\":\"valor\",\n  \t\t\"atributo_2\":\"valor\"\n\t}\n  }\n  </p></li>\n \n </ul>\n \n En la respuesta se detallarán los errores si los tiene  de lo contrario se devolverá el objeto insertado,\"","response":[]}},{"name":"datos_update_multiple","request":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":""},"url":"http://localhost/anf_test/public/api/admin/datos/update_multiple","description":"\"Servicio para actualizar varios elemento en la tabla datos \nmétodos que permite <b>PUT o PATCH</b> \nLos parámetros para la actualización serán un arreglo con los datos de los objetos a actualizar:\n <ul>Parámetros:\n <li> Arreglo en formato Json con el nombre del modelo y los objetos con sus atributos\n  <p style=\"color= green\">Ej: \n  {\n  \t\"Nombre Modelo\":[{\"\n  \t\tatributo_1\":\"valor\",\n  \t\t\"atributo_2\":\"valor\"\n\t},\n{\"\n  \t\tatributo_1\":\"valor\",\n  \t\t\"atributo_2\":\"valor\"\n\t}]\n  }\n  </p></li>\n \n </ul>\n \n En la respuesta se detallarán los errores si los tiene  de lo contrario se devolverá el objeto insertado, si la clase a actualizar es hija de otra clase se le pasan tanto los parámetros del padre y del hijo \"","response":[]}},{"name":"datos_delete","request":{"method":"DELETE","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":""},"url":"http://localhost/anf_test/public/api/admin/datos/0","description":"Servicio para eliminar un elemento en la tabla datos \nmétodos que permite <b>DELETE</b>.</br>\nSe le envia por <b>GET</b> el id de la tabla","response":[]}},{"name":"datos_delete_parameters","request":{"method":"DELETE","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":""},"url":"http://localhost/anf_test/public/api/admin/datos/delete_parameters","description":"Servicio para eliminar un elemento en la tabla datos \nmétodos que permite <b>DELETE</b>.</br>\nSe le envia como parámetro JSON las condiciones de búsqueda \nlos mismos parámetros y condiciones del servicio list","response":[]}},{"name":"datos_delete_by_id","request":{"method":"DELETE","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":""},"url":"http://localhost/anf_test/public/api/admin/datos/delete_by_id","description":"Servicio para eliminar un elemento en la tabla datos \nmétodos que permite <b>DELETE</b>.</br>\nSe le envia como parámetro un arreglo con el id de cada elemento a eliminar\n<ul>Parámetros:\n  <li>Arreglo en formato Json de la llave primaria de la tabla\n[\n  {\n    \"id_tabla\":\"valor\"\n},\n  {\n    \"id_tabla\":\"valor\"\n}, \n {\n    \"id_tabla\":\"valor\"\n}\n]\n</li>\n<li> Arreglo de valor de llave primaria de la tabla\n  [valor,valor,calor] \n</li>\n</ul>\n","response":[]}},{"name":"datos_validate","request":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":""},"url":"http://localhost/anf_test/public/api/admin/datos/validate","description":"Servicio para validar un elemento en la tabla datos \nmétodos que permite <b>POST</b> \n\n <ul>Parámetros:\n <li> Formato Json con cada uno de los campos de la tabla y esta accion se ejecutara para el escenario por defecto del modelo \n <p style=\"color= green\">Ej: \n  {\n  \t\"atributo_1\":\"valor\",\n  \t\"atributo_2\":\"valor\"\n  \t\"_scenario\":\"valor\"\n  }\n  </p>\n  </li>\n <li> Objeto en formato Json con el nombre del modelo y como atributos cada uno de los campos de la tabla y en el campo opcional <strong>_scenario</strong> el nombre del escenario donde se ejecutará la acción y en el campo <strong>_specific</strong> con valor true si quieres solamente validar los campos enviados como parametro\n  <p style=\"color= green\">Ej: \n  {\n  \t\"Nombre Modelo\":{\"\n  \t\tatributo_1\":\"valor\",\n  \t\t\"atributo_2\":\"valor\"\n\t}\n  \t\"_scenario\":\"valor\"\n  }\n  </p>\n  </li>\n </ul>\n \n En la respuesta se detallarán los errores si los tiene.","response":[]}}],"_postman_isSubFolder":true}],"_postman_isSubFolder":true}]}]}
